version: 2.1
jobs:
  build:
    working_directory: ~/rails_booking_system

    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker

      # Installs PIP, Docker Compose, and AWS CLI
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            apk update && apk add curl curl-dev bash
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76

      # Login to AWS ECR
      - run:
          name: Authenticate to AWS ECR
          command: |
            login="$(aws ecr get-login)"
            ${login}

      # # Build Docker image
      - run:
          name: Build Docker image
          command: |
            docker-compose build

      # # Push Docker image to ECR
      - run:
          name: Push Docker image to ECR
          command: |
            docker tag railsbookingsystem_web:latest 003006742287.dkr.ecr.ap-southeast-1.amazonaws.com/rails-booking-system:latest
            docker push 003006742287.dkr.ecr.ap-southeast-1.amazonaws.com/rails-booking-system:latest

  deploy:
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker

      # Installs PIP, Docker Compose, and AWS CLI
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            apk update && apk add curl curl-dev bash
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76

      # Login to AWS ECR
      - run:
          name: Authenticate to AWS ECR
          command: |
            login="$(aws ecr get-login)"
            ${login}

      - run:
          name: Pull Docker image from ECR
          command: |
            docker pull 003006742287.dkr.ecr.ap-southeast-1.amazonaws.com/rails-booking-system:latest

      - run:
          name: Deploy using CodeDeploy
          command: |
            # Below is just an example of how we can call AWS CodeDeploy to deploy our app
            # aws deploy create-deployment --application-name rails_booking_system --deployment-group-name rails_booking_system_deployment+group --revision revisionType=AppSpecContent,appSpecContent={content="<path-to-appspec-file>"}

workflows:
  build-test-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build